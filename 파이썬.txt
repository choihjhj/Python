[파이썬 Tip]
* 문자열이나 리스트 역순은 s[::-1] 이렇게 하면 됨
* 리스트 전체출력 for문 없이 나오게 하려면 print(*s) 쓰기, 대신 띄어쓰기도 같이 나옴
* sort()는 알아서 정렬해서 리스트에 저장됨, 반대로 sorted()는 값 변수로 받아줘야 저장됨
예)
s.sort()
s = sorted(s)

* filter함수와 map함수 차이
-filter 함수는 주어진 함수를 이용하여 입력 요소를 필터링 하는 것
-map 함수는 주어진 함수를 이용하여 입력 요소에 대한 변환을 수행하는 것

근데, 애매하게 filter함수나 map함수로 필터해서 값 저장하지 말고 그냥 for문 쓰기
for문 쓰는 게 실행속도가 적고 간단함.
예) 주어진 입력 값 양수로 변환해서 리스트에 저장
s = list(map(lambda x: abs(int(x)), input().split())) 
s = [abs(int(x)) for x in input().split()]
예) 짝수만 리스트에 저장
s = [x for x in input().split() if x%2==0]

*변수 사용없는 반복문 실행할 땐, 변수대신 _언더바로 쓰기
for _ in range(3):
    print('hello') 

* NXM 크기의 2차원 리스트를 한번에 초기화할 때, 리스트 컴프리헨션으로 하기
arr = [[0]*m for _ in range(n)] 

* 리스트에서 특정 값을 가지는 원소를 모두 제거하기
a=[1,2,3,4,5,5,5]
remove_set={3,5}
result=[i for i in a if i not in remove_set] #[1,2,4]

* 메모리를 효율적으로 사용해야할 때 리스트보다 튜플이 좋음
* 최단 경로 알고리즘에서는 (비용, 노드번호)의 형태로 튜플 자료형을 자주 사용함
* 입력데이터많아서 빨리 받아야할 땐 input()보다 sys.stdin.readline().rstrip()메서드 이용하기, 단 입력후 엔터도입력됨
이진탐색,정렬,그래프에서 자주 사용됨
import sys
data = sys.stdin.readline().rstrip()

* value로 정렬하고 싶을 때-오름차순,내림차순
arr=[('홍길동',35),('이순신',75),('아무개',50)] 
result=sorted(arr, key=lambda x: x[1]) #[('홍길동', 35), ('아무개', 50), ('이순신', 75)]
result=sorted(arr, key=lambda x: x[1], reverse=True) #[('이순신', 75), ('아무개', 50), ('홍길동', 35)]

* from collections import Counter
cnt=Counter(['r','b','r','g','b','b'])
print(cnt['b']) #3
print(dict(cnt)) #{'r':2,'b':3,'g':1}

* 최대공약수math.gcd(), 최소공배수lcm
import math
def lcm(a, b):
    return a*b//math.gcd(a,b)

print(math.gcd(21,14)) #7
print(lcm(21,14)) #42